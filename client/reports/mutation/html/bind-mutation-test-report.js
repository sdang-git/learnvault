document.querySelector('mutation-test-report-app').report = {"files":{"/Users/steve/learnvault/client/src/App.jsx":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":68},"start":{"column":19,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":44,"line":20},"start":{"column":42,"line":20}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1","location":{"end":{"column":54,"line":19},"start":{"column":52,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport PageNotFound from './components/PageNotFound';\nimport WithAuth from './components/WithAuth';\n\nimport AllCollections from './components/collections/AllCollections';\nimport ExpandedCollection from './components/collections/ExpandedCollection';\nimport SavedCollections from './components/collections/SavedCollections';\nimport AddCollection from './components/collections/AddCollection';\n\nimport './App.css';\n\nconst App = () => {\n  const [loggedInUser, setLoggedInUser] = useState('');\n  const [timerId, setTimerId] = useState('');\n\n  return (\n    <Router>\n      <Nav loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser} timerId={timerId} setTimerId={setTimerId} />\n      <main>\n        <Switch>\n          <Route path=\"/register\">\n            <Register setLoggedInUser={setLoggedInUser} />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login setLoggedInUser={setLoggedInUser} setTimerId={setTimerId} timerId={timerId} />\n          </Route>\n\n          <Route path=\"/profile\">\n            {/* To protect a route, simply wrap it with a WithAuth component */}\n            <WithAuth setLoggedInUser={setLoggedInUser} Component={Profile} loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/collections/user/:userId\">\n            <AllCollections userCollections loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/collections/:id\">\n            <ExpandedCollection loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/savedcollections\">\n            <WithAuth setLoggedInUser={setLoggedInUser} Component={SavedCollections} loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/addcollection\">\n            {/* <AddCollection loggedInUser={loggedInUser} /> */}\n            <WithAuth setLoggedInUser={setLoggedInUser} Component={AddCollection} loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <AllCollections loggedInUser={loggedInUser} />\n          </Route>\n\n          <Route path=\"/\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n};\n\nexport default App;\n"},"/Users/steve/learnvault/client/src/components/Login.jsx":{"language":"javascript","mutants":[{"id":"4","location":{"end":{"column":40,"line":5},"start":{"column":38,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3","location":{"end":{"column":2,"line":74},"start":{"column":61,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":46,"line":6},"start":{"column":44,"line":6}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"6","location":{"end":{"column":4,"line":39},"start":{"column":24,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":28,"line":12},"start":{"column":9,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"8","location":{"end":{"column":28,"line":12},"start":{"column":9,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"9","location":{"end":{"column":28,"line":12},"start":{"column":9,"line":12}},"mutatorName":"LogicalOperator","replacement":"!email && !password","status":"Survived"},{"id":"10","location":{"end":{"column":15,"line":12},"start":{"column":9,"line":12}},"mutatorName":"BooleanLiteral","replacement":"email","status":"Survived"},{"id":"12","location":{"end":{"column":23,"line":14},"start":{"column":11,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"11","location":{"end":{"column":28,"line":12},"start":{"column":19,"line":12}},"mutatorName":"BooleanLiteral","replacement":"password","status":"Survived"},{"id":"13","location":{"end":{"column":6,"line":20},"start":{"column":25,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"14","location":{"end":{"column":21,"line":15},"start":{"column":15,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":23,"line":17},"start":{"column":9,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":8,"line":18},"start":{"column":16,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":43,"line":17},"start":{"column":25,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":47,"line":19},"start":{"column":28,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"19","location":{"end":{"column":42,"line":21},"start":{"column":13,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"20","location":{"end":{"column":8,"line":34},"start":{"column":23,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":39,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"21","location":{"end":{"column":39,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"23","location":{"end":{"column":39,"line":24},"start":{"column":13,"line":24}},"mutatorName":"EqualityOperator","replacement":"data.attempt !== 'success'","status":"Survived"},{"id":"24","location":{"end":{"column":39,"line":24},"start":{"column":30,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":12,"line":29},"start":{"column":47,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":10,"line":33},"start":{"column":41,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":31,"line":27},"start":{"column":29,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"28","location":{"end":{"column":34,"line":28},"start":{"column":26,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":27,"line":32},"start":{"column":24,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"30","location":{"end":{"column":8,"line":38},"start":{"column":23,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"31","location":{"end":{"column":39,"line":37},"start":{"column":21,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"32","location":{"end":{"column":54,"line":52},"start":{"column":23,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"33","location":{"end":{"column":57,"line":63},"start":{"column":23,"line":63}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = ({ setLoggedInUser, setTimerId, timerId }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const login = (e) => {\n    e.preventDefault();\n\n    if (!email || !password) return;\n\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If login was successful, redirect to homepage\n        if (data.attempt === 'success') {\n          clearTimeout(timerId);\n          const newTimerId = setTimeout(() => {\n            setLoggedInUser('');\n            history.push('/login');\n          }, 3600000);\n          setTimerId(newTimerId);\n          setLoggedInUser(data.userId);\n          history.push('/');\n        }\n      })\n      .catch((err) => {\n        // TODO: handle error if fetch attempt fails\n        console.log('Error on login: ', err);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n\n      <form>\n        <label htmlFor=\"login-email\" className=\"input-label\">\n          <div className=\"input-label__text\">Email</div>\n          <input\n            type=\"text\"\n            className=\"input-label__input\"\n            id=\"login-email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n        </label>\n\n        <label htmlFor=\"login-password\" className=\"input-label\">\n          <div className=\"input-label__text\">Password</div>\n          <input\n            type=\"password\"\n            className=\"input-label__input\"\n            id=\"login-password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n        </label>\n\n        <button type=\"submit\" onClick={login}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"},"/Users/steve/learnvault/client/src/components/Nav.jsx":{"language":"javascript","mutants":[{"id":"36","location":{"end":{"column":24,"line":13},"start":{"column":11,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"35","location":{"end":{"column":4,"line":25},"start":{"column":24,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"34","location":{"end":{"column":2,"line":80},"start":{"column":7,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"44","location":{"end":{"column":21,"line":24},"start":{"column":18,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"45","location":{"end":{"column":12,"line":50},"start":{"column":12,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"37","location":{"end":{"column":42,"line":14},"start":{"column":13,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"38","location":{"end":{"column":8,"line":17},"start":{"column":23,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":12,"line":75},"start":{"column":12,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"48","location":{"end":{"column":25,"line":37},"start":{"column":12,"line":37}},"mutatorName":"BooleanLiteral","replacement":"loggedInUser","status":"Killed"},{"id":"39","location":{"end":{"column":44,"line":16},"start":{"column":21,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"50","location":{"end":{"column":12,"line":75},"start":{"column":12,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"51","location":{"end":{"column":12,"line":75},"start":{"column":12,"line":51}},"mutatorName":"LogicalOperator","replacement":"loggedInUser || <>\n              <li className=\"nav__item\">\n                <Link to=\"/addcollection\" className=\"nav__link\" id=\"nav-addcollection\">\n                  Add Collection\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link to=\"/savedcollections\" className=\"nav__link\" id=\"nav-savedcollections\">\n                  Saved Collections\n                </Link>\n              </li>\n              {\n    /* Profile nav bar item not completed but functionality can be added */\n  }\n              {\n    /* <li className=\"nav__item\">\n     <Link to=\"/profile\" className=\"nav__link\" id=\"nav-profile\">\n       Profile\n     </Link>\n    </li> */\n  }\n              <li className=\"nav__item\">\n                <button type=\"button\" className=\"nav__link\" onClick={logout} id=\"nav-logout\">\n                  Logout\n                </button>\n              </li>\n            </>","status":"Killed"},{"id":"40","location":{"end":{"column":8,"line":20},"start":{"column":23,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":42,"line":19},"start":{"column":21,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"43","location":{"end":{"column":23,"line":23},"start":{"column":21,"line":23}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"42","location":{"end":{"column":18,"line":22},"start":{"column":16,"line":22}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"46","location":{"end":{"column":12,"line":50},"start":{"column":12,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"47","location":{"end":{"column":12,"line":50},"start":{"column":12,"line":37}},"mutatorName":"LogicalOperator","replacement":"!loggedInUser || <>\n              <li className=\"nav__item\">\n                <Link to=\"/login\" className=\"nav__link\" id=\"nav-login\">\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link to=\"/register\" className=\"nav__link\" id=\"nav-register\">\n                  Register\n                </Link>\n              </li>\n            </>","status":"Killed"}],"source":"import React from 'react';\nimport { Link, useHistory, BrowserRouter } from 'react-router-dom';\n\nimport './Nav.css';\n\nconst Nav = ({\n  loggedInUser, setLoggedInUser, timerId, setTimerId,\n}) => {\n  const history = useHistory();\n\n  const logout = () => {\n    // console.log('logging out');\n    fetch('/api/logout')\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success /api/logout: ', data);\n      })\n      .catch((err) => {\n        console.log('Error /api/logout: ', err);\n      });\n    clearTimeout(timerId);\n    setTimerId('');\n    setLoggedInUser('');\n    history.push('/');\n  };\n\n  return (\n    <header className=\"header\">\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <Link to=\"/\" className=\"nav__link\" id=\"nav-home\">\n              Home\n            </Link>\n          </li>\n\n          {!loggedInUser && (\n            <>\n              <li className=\"nav__item\">\n                <Link to=\"/login\" className=\"nav__link\" id=\"nav-login\">\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link to=\"/register\" className=\"nav__link\" id=\"nav-register\">\n                  Register\n                </Link>\n              </li>\n            </>\n          )}\n          {loggedInUser && (\n            <>\n              <li className=\"nav__item\">\n                <Link to=\"/addcollection\" className=\"nav__link\" id=\"nav-addcollection\">\n                  Add Collection\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link to=\"/savedcollections\" className=\"nav__link\" id=\"nav-savedcollections\">\n                  Saved Collections\n                </Link>\n              </li>\n              {/* Profile nav bar item not completed but functionality can be added */}\n              {/* <li className=\"nav__item\">\n                <Link to=\"/profile\" className=\"nav__link\" id=\"nav-profile\">\n                  Profile\n                </Link>\n              </li> */}\n              <li className=\"nav__item\">\n                <button type=\"button\" className=\"nav__link\" onClick={logout} id=\"nav-logout\">\n                  Logout\n                </button>\n              </li>\n            </>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n"},"/Users/steve/learnvault/client/src/components/Profile.jsx":{"language":"javascript","mutants":[{"id":"53","location":{"end":{"column":2,"line":7},"start":{"column":17,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React from 'react';\n\nconst Profile = () => (\n  <div className=\"profile\">\n    This is the profile...\n  </div>\n);\n\nexport default Profile;\n"},"/Users/steve/learnvault/client/src/components/Register.jsx":{"language":"javascript","mutants":[{"id":"54","location":{"end":{"column":2,"line":253},"start":{"column":43,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":40,"line":14},"start":{"column":38,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"57","location":{"end":{"column":46,"line":16},"start":{"column":44,"line":16}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"56","location":{"end":{"column":46,"line":15},"start":{"column":44,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"58","location":{"end":{"column":60,"line":17},"start":{"column":58,"line":17}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"59","location":{"end":{"column":29,"line":23},"start":{"column":24,"line":23}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"60","location":{"end":{"column":43,"line":24},"start":{"column":38,"line":24}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"61","location":{"end":{"column":50,"line":26},"start":{"column":48,"line":26}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"62","location":{"end":{"column":56,"line":27},"start":{"column":54,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"63","location":{"end":{"column":56,"line":28},"start":{"column":54,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"64","location":{"end":{"column":70,"line":29},"start":{"column":68,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"65","location":{"end":{"column":4,"line":42},"start":{"column":36,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":27,"line":36},"start":{"column":22,"line":36}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"67","location":{"end":{"column":19,"line":37},"start":{"column":14,"line":37}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"70","location":{"end":{"column":24,"line":40},"start":{"column":22,"line":40}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"69","location":{"end":{"column":24,"line":39},"start":{"column":22,"line":39}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"68","location":{"end":{"column":21,"line":38},"start":{"column":19,"line":38}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"72","location":{"end":{"column":4,"line":60},"start":{"column":37,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":49,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"71","location":{"end":{"column":31,"line":41},"start":{"column":29,"line":41}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"74","location":{"end":{"column":49,"line":52},"start":{"column":9,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"75","location":{"end":{"column":49,"line":52},"start":{"column":9,"line":52}},"mutatorName":"BooleanLiteral","replacement":"regex.test(String(email).toLowerCase())","status":"Survived"},{"id":"76","location":{"end":{"column":6,"line":57},"start":{"column":51,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"77","location":{"end":{"column":49,"line":53},"start":{"column":21,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"79","location":{"end":{"column":20,"line":55},"start":{"column":16,"line":55}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"78","location":{"end":{"column":28,"line":54},"start":{"column":24,"line":54}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"81","location":{"end":{"column":4,"line":78},"start":{"column":40,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"80","location":{"end":{"column":21,"line":59},"start":{"column":19,"line":59}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"84","location":{"end":{"column":30,"line":70},"start":{"column":9,"line":70}},"mutatorName":"BooleanLiteral","replacement":"regex.test(username)","status":"Survived"},{"id":"83","location":{"end":{"column":30,"line":70},"start":{"column":9,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"86","location":{"end":{"column":55,"line":71},"start":{"column":24,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"87","location":{"end":{"column":28,"line":72},"start":{"column":24,"line":72}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"85","location":{"end":{"column":6,"line":75},"start":{"column":32,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"88","location":{"end":{"column":20,"line":73},"start":{"column":16,"line":73}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"89","location":{"end":{"column":24,"line":77},"start":{"column":22,"line":77}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"90","location":{"end":{"column":4,"line":93},"start":{"column":40,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"82","location":{"end":{"column":30,"line":70},"start":{"column":9,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"94","location":{"end":{"column":36,"line":85},"start":{"column":9,"line":85}},"mutatorName":"EqualityOperator","replacement":"String(password).length >= 3","status":"Survived"},{"id":"91","location":{"end":{"column":36,"line":85},"start":{"column":9,"line":85}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"93","location":{"end":{"column":36,"line":85},"start":{"column":9,"line":85}},"mutatorName":"EqualityOperator","replacement":"String(password).length <= 3","status":"Survived"},{"id":"95","location":{"end":{"column":6,"line":90},"start":{"column":38,"line":85}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"92","location":{"end":{"column":36,"line":85},"start":{"column":9,"line":85}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"97","location":{"end":{"column":28,"line":87},"start":{"column":24,"line":87}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"98","location":{"end":{"column":20,"line":88},"start":{"column":16,"line":88}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"100","location":{"end":{"column":4,"line":108},"start":{"column":39,"line":99}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":55,"line":86},"start":{"column":24,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"102","location":{"end":{"column":37,"line":100},"start":{"column":9,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"99","location":{"end":{"column":24,"line":92},"start":{"column":22,"line":92}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"103","location":{"end":{"column":37,"line":100},"start":{"column":9,"line":100}},"mutatorName":"EqualityOperator","replacement":"password === passwordConfirm","status":"Survived"},{"id":"105","location":{"end":{"column":60,"line":101},"start":{"column":31,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"106","location":{"end":{"column":28,"line":102},"start":{"column":24,"line":102}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"107","location":{"end":{"column":20,"line":103},"start":{"column":16,"line":103}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"109","location":{"end":{"column":4,"line":150},"start":{"column":36,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":31,"line":107},"start":{"column":29,"line":107}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"101","location":{"end":{"column":37,"line":100},"start":{"column":9,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"104","location":{"end":{"column":6,"line":105},"start":{"column":39,"line":100}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"111","location":{"end":{"column":49,"line":118},"start":{"column":34,"line":118}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"112","location":{"end":{"column":6,"line":124},"start":{"column":51,"line":118}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"113","location":{"end":{"column":21,"line":119},"start":{"column":15,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"116","location":{"end":{"column":43,"line":121},"start":{"column":25,"line":121}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"110","location":{"end":{"column":51,"line":116},"start":{"column":22,"line":116}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":23,"line":121},"start":{"column":9,"line":121}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"117","location":{"end":{"column":32,"line":130},"start":{"column":9,"line":130}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"118","location":{"end":{"column":32,"line":130},"start":{"column":9,"line":130}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"114","location":{"end":{"column":8,"line":122},"start":{"column":16,"line":120}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"119","location":{"end":{"column":6,"line":134},"start":{"column":34,"line":130}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"121","location":{"end":{"column":28,"line":132},"start":{"column":24,"line":132}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"120","location":{"end":{"column":64,"line":131},"start":{"column":21,"line":131}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"122","location":{"end":{"column":20,"line":133},"start":{"column":16,"line":133}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"123","location":{"end":{"column":27,"line":137},"start":{"column":9,"line":137}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"125","location":{"end":{"column":6,"line":141},"start":{"column":29,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"127","location":{"end":{"column":28,"line":139},"start":{"column":24,"line":139}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"126","location":{"end":{"column":48,"line":138},"start":{"column":24,"line":138}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"124","location":{"end":{"column":27,"line":137},"start":{"column":9,"line":137}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"129","location":{"end":{"column":36,"line":145},"start":{"column":9,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"128","location":{"end":{"column":20,"line":140},"start":{"column":16,"line":140}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"130","location":{"end":{"column":36,"line":145},"start":{"column":9,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"132","location":{"end":{"column":23,"line":148},"start":{"column":20,"line":148}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"134","location":{"end":{"column":23,"line":169},"start":{"column":9,"line":169}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"131","location":{"end":{"column":6,"line":149},"start":{"column":38,"line":145}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"136","location":{"end":{"column":8,"line":196},"start":{"column":8,"line":183}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"137","location":{"end":{"column":8,"line":196},"start":{"column":8,"line":183}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"138","location":{"end":{"column":8,"line":196},"start":{"column":8,"line":183}},"mutatorName":"LogicalOperator","replacement":"error || <ul className=\"form-error\">\n          {errorEmail && <li className=\"form-error__item\">{errorEmail}</li>}\n          {errorUsername && <li className=\"form-error__item\">{errorUsername}</li>}\n          {errorPassword && <li className=\"form-error__item\">{errorPassword}</li>}\n          {errorPasswordConfirm && <li className=\"form-error__item\">{errorPasswordConfirm}</li>}\n        </ul>","status":"Survived"},{"id":"139","location":{"end":{"column":76,"line":185},"start":{"column":12,"line":185}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"133","location":{"end":{"column":4,"line":173},"start":{"column":29,"line":156}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":76,"line":185},"start":{"column":12,"line":185}},"mutatorName":"LogicalOperator","replacement":"errorEmail || <li className=\"form-error__item\">{errorEmail}</li>","status":"Survived"},{"id":"142","location":{"end":{"column":12,"line":188},"start":{"column":12,"line":186}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"143","location":{"end":{"column":12,"line":188},"start":{"column":12,"line":186}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"135","location":{"end":{"column":23,"line":169},"start":{"column":9,"line":169}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"140","location":{"end":{"column":76,"line":185},"start":{"column":12,"line":185}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"147","location":{"end":{"column":12,"line":191},"start":{"column":12,"line":189}},"mutatorName":"LogicalOperator","replacement":"errorPassword || <li className=\"form-error__item\">{errorPassword}</li>","status":"Survived"},{"id":"146","location":{"end":{"column":12,"line":191},"start":{"column":12,"line":189}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"149","location":{"end":{"column":12,"line":194},"start":{"column":12,"line":192}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"150","location":{"end":{"column":12,"line":194},"start":{"column":12,"line":192}},"mutatorName":"LogicalOperator","replacement":"errorPasswordConfirm || <li className=\"form-error__item\">{errorPasswordConfirm}</li>","status":"Survived"},{"id":"148","location":{"end":{"column":12,"line":194},"start":{"column":12,"line":192}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"145","location":{"end":{"column":12,"line":191},"start":{"column":12,"line":189}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"144","location":{"end":{"column":12,"line":188},"start":{"column":12,"line":186}},"mutatorName":"LogicalOperator","replacement":"errorUsername || <li className=\"form-error__item\">{errorUsername}</li>","status":"Survived"},{"id":"151","location":{"end":{"column":54,"line":205},"start":{"column":23,"line":205}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"152","location":{"end":{"column":57,"line":219},"start":{"column":23,"line":219}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"153","location":{"end":{"column":57,"line":233},"start":{"column":23,"line":233}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"154","location":{"end":{"column":64,"line":244},"start":{"column":23,"line":244}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport './Register.css';\n\nconst register = ({ setLoggedInUser }) => {\n  const history = useHistory();\n\n  // -----------\n  // Form fields\n  // -----------\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  // --------------\n  // Error messages\n  // --------------\n\n  let containsErrors = false;\n  const [error, setError] = useState(false);\n\n  const [errorEmail, setErrorEmail] = useState('');\n  const [errorUsername, setErrorUsername] = useState('');\n  const [errorPassword, setErrorPassword] = useState('');\n  const [errorPasswordConfirm, setErrorPasswordConfirm] = useState('');\n\n  // ------------------------\n  // Clear out error messages\n  // ------------------------\n\n  const clearErrorMessages = () => {\n    containsErrors = false;\n    setError(false);\n    setErrorEmail('');\n    setErrorUsername('');\n    setErrorPassword('');\n    setErrorPasswordConfirm('');\n  };\n\n  // ---------------------\n  // Validate email format\n  // ---------------------\n\n  const validateEmailFormat = () => {\n    // Regex for email validation from: https://stackoverflow.com/a/46181/2040509\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regex.test(String(email).toLowerCase())) {\n      setErrorEmail('Please enter a valid email');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorEmail('');\n  };\n\n  // ------------------------\n  // Validate username format\n  // ------------------------\n\n  const validateUsernameFormat = () => {\n    // Regex for username validation from: https://www.regextester.com/104030\n    const regex = /^[a-z0-9_-]{3,16}$/;\n\n    if (!regex.test(username)) {\n      setErrorUsername('Please enter a valid username');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorUsername('');\n  };\n\n  // ------------------------\n  // Validate password format\n  // ------------------------\n\n  const validatePasswordFormat = () => {\n    if (String(password).length < 3) {\n      setErrorPassword('Please enter a valid password');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorPassword('');\n  };\n\n  // -----------------------\n  // Validate password match\n  // -----------------------\n\n  const validatePasswordMatch = () => {\n    if (password !== passwordConfirm) {\n      setErrorPasswordConfirm(\"Password fields don't match\");\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorPasswordConfirm('');\n  };\n\n  // --------------\n  // Send user data\n  // --------------\n  // TODO: clear any tokens that might be lingering in the users cookies\n\n  const sendUserData = async () => {\n    const userInfo = { email, username, password };\n\n    const response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userInfo),\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n    // Email already exists\n    if (data.emailAlreadyExists) {\n      setErrorEmail('An account with that email already exists');\n      containsErrors = true;\n      setError(true);\n    }\n\n    // Username is taken\n    if (data.usernameTaken) {\n      setErrorUsername('Username already taken');\n      containsErrors = true;\n      setError(true);\n    }\n\n    // TODO: handle any server errors that might have occured\n\n    if (data.registrationSuccessful) {\n      // TODO: show successful registration message\n      setLoggedInUser(data.userId);\n      history.push('/');\n    }\n  };\n\n  // -----------\n  // Form submit\n  // -----------\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    // Clear our all errors before validating\n    clearErrorMessages();\n\n    // Validate all inputs\n    validateEmailFormat();\n    validateUsernameFormat();\n    validatePasswordFormat();\n    validatePasswordMatch();\n\n    // If any of the inputs don't pass validation stop submission\n    if (containsErrors) return;\n\n    // Send the data to the backend and do backend validation\n    sendUserData();\n  };\n\n  // ------\n  // Render\n  // ------\n\n  return (\n    <div className=\"register-page\">\n      <h1>Register</h1>\n\n      {error && (\n        <ul className=\"form-error\">\n          {errorEmail && <li className=\"form-error__item\">{errorEmail}</li>}\n          {errorUsername && (\n            <li className=\"form-error__item\">{errorUsername}</li>\n          )}\n          {errorPassword && (\n            <li className=\"form-error__item\">{errorPassword}</li>\n          )}\n          {errorPasswordConfirm && (\n            <li className=\"form-error__item\">{errorPasswordConfirm}</li>\n          )}\n        </ul>\n      )}\n\n      <form className=\"register-form\">\n        <label htmlFor=\"register-email\" className=\"input-label\">\n          <div className=\"input-label__text\">Email</div>\n          <input\n            type=\"text\"\n            className=\"input-label__input\"\n            id=\"register-email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n        </label>\n\n        <label htmlFor=\"register-username\" className=\"input-label\">\n          <div className=\"input-label__text\">Username</div>\n          <div className=\"input-label__description\">\n            Length 3-16 characters, numbers, letters, -, and _ allowed\n          </div>\n          <input\n            type=\"text\"\n            className=\"input-label__input\"\n            id=\"register-username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n        </label>\n\n        <label htmlFor=\"register-password\" className=\"input-label\">\n          <div className=\"input-label__text\">Password</div>\n          <div className=\"input-label__description\">\n            Minimum length of 3 characters\n          </div>\n          <input\n            type=\"password\"\n            className=\"input-label__input\"\n            id=\"register-password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n        </label>\n\n        <label htmlFor=\"register-confirm-password\" className=\"input-label\">\n          <div className=\"input-label__text\">Confirm Password</div>\n          <input\n            type=\"password\"\n            className=\"input-label__input\"\n            id=\"register-confirm-password\"\n            onChange={(e) => setPasswordConfirm(e.target.value)}\n            value={passwordConfirm}\n          />\n        </label>\n\n        <input type=\"submit\" value=\"Register\" onClick={submitForm} />\n      </form>\n    </div>\n  );\n};\n\nexport default register;\n"},"/Users/steve/learnvault/client/src/components/PageNotFound.jsx":{"language":"javascript","mutants":[{"id":"52","location":{"end":{"column":2,"line":7},"start":{"column":22,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\n\nimport './PageNotFound.css';\n\nconst PageNotFound = () => (\n  <div className=\"page-not-found\">Page not found.</div>\n);\n\nexport default PageNotFound;\n"},"/Users/steve/learnvault/client/src/components/WithAuth.jsx":{"language":"javascript","mutants":[{"id":"158","location":{"end":{"column":4,"line":32},"start":{"column":19,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"157","location":{"end":{"column":49,"line":9},"start":{"column":44,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"159","location":{"end":{"column":28,"line":16},"start":{"column":11,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"156","location":{"end":{"column":46,"line":8},"start":{"column":42,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"155","location":{"end":{"column":2,"line":54},"start":{"column":7,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"160","location":{"end":{"column":8,"line":25},"start":{"column":22,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"161","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"162","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"163","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"EqualityOperator","replacement":"res.status !== 200","status":"Survived"},{"id":"164","location":{"end":{"column":10,"line":20},"start":{"column":33,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"165","location":{"end":{"column":27,"line":19},"start":{"column":22,"line":19}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"166","location":{"end":{"column":10,"line":24},"start":{"column":16,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"167","location":{"end":{"column":81,"line":22},"start":{"column":25,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"168","location":{"end":{"column":8,"line":31},"start":{"column":23,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"169","location":{"end":{"column":66,"line":27},"start":{"column":23,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"172","location":{"end":{"column":25,"line":30},"start":{"column":21,"line":30}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"173","location":{"end":{"column":8,"line":32},"start":{"column":6,"line":32}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"174","location":{"end":{"column":14,"line":38},"start":{"column":7,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"175","location":{"end":{"column":14,"line":38},"start":{"column":7,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"176","location":{"end":{"column":4,"line":41},"start":{"column":16,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"171","location":{"end":{"column":25,"line":29},"start":{"column":20,"line":29}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"170","location":{"end":{"column":27,"line":28},"start":{"column":25,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"177","location":{"end":{"column":15,"line":43},"start":{"column":7,"line":43}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"178","location":{"end":{"column":15,"line":43},"start":{"column":7,"line":43}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"179","location":{"end":{"column":4,"line":48},"start":{"column":17,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"180","location":{"end":{"column":2,"line":58},"start":{"column":22,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst WithAuth = ({\n  Component, setLoggedInUser, loggedInUser, id,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  // console.log('props', Component, setLoggedInUser, loggedInUser, id);\n  // console.log('useState loading', loading);\n  // console.log('useState redirect', redirect);\n\n  useEffect(() => {\n    fetch('/api/checkToken')\n      .then((res) => {\n        if (res.status === 200) {\n          setLoading(false);\n        } else {\n          const error = new Error(res.statusText);\n          console.error('Error: fetch /api/checkToken did not return status 200', error);\n          // throw error;\n        }\n      })\n      .catch((err) => {\n        console.error('Error: fetch /api/checkToken caught error', err);\n        setLoggedInUser('');\n        setLoading(false);\n        setRedirect(true);\n      });\n  }, []);\n\n  // console.log('useEffect loading', loading);\n  // console.log('useEffect redirect', redirect);\n  // console.log('useEffect loggedInUser', loggedInUser);\n\n  if (loading) {\n    // console.log('returning null');\n    return null;\n  }\n\n  if (redirect) {\n    // console.log('redirecting...');\n    return (\n      <Redirect to=\"/login\" />\n    );\n  }\n\n  // console.log('rendering Component', Component);\n  return (\n    <Component loggedInUser={loggedInUser} id={id} />\n  );\n};\n\nWithAuth.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n};\n\nexport default WithAuth;\n"},"/Users/steve/learnvault/client/src/components/collections/AddCollection.jsx":{"language":"javascript","mutants":[{"id":"184","location":{"end":{"column":52,"line":6},"start":{"column":50,"line":6}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"183","location":{"end":{"column":40,"line":5},"start":{"column":38,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"185","location":{"end":{"column":45,"line":7},"start":{"column":40,"line":7}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"186","location":{"end":{"column":54,"line":8},"start":{"column":52,"line":8}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"188","location":{"end":{"column":46,"line":10},"start":{"column":44,"line":10}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"189","location":{"end":{"column":38,"line":11},"start":{"column":36,"line":11}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"187","location":{"end":{"column":38,"line":9},"start":{"column":36,"line":9}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"181","location":{"end":{"column":2,"line":96},"start":{"column":45,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"190","location":{"end":{"column":40,"line":12},"start":{"column":38,"line":12}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"182","location":{"end":{"column":42,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"191","location":{"end":{"column":4,"line":41},"start":{"column":32,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"192","location":{"end":{"column":29,"line":17},"start":{"column":11,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":6,"line":33},"start":{"column":31,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":21,"line":18},"start":{"column":15,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"195","location":{"end":{"column":8,"line":21},"start":{"column":16,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"196","location":{"end":{"column":23,"line":20},"start":{"column":9,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"198","location":{"end":{"column":8,"line":32},"start":{"column":28,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"199","location":{"end":{"column":42,"line":34},"start":{"column":13,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"197","location":{"end":{"column":43,"line":20},"start":{"column":25,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"201","location":{"end":{"column":33,"line":36},"start":{"column":21,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"200","location":{"end":{"column":8,"line":37},"start":{"column":23,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"202","location":{"end":{"column":8,"line":40},"start":{"column":23,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"203","location":{"end":{"column":46,"line":39},"start":{"column":21,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"204","location":{"end":{"column":95,"line":49},"start":{"column":63,"line":49}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"205","location":{"end":{"column":93,"line":54},"start":{"column":62,"line":54}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"208","location":{"end":{"column":81,"line":64},"start":{"column":74,"line":64}},"mutatorName":"BooleanLiteral","replacement":"hidden","status":"Survived"},{"id":"206","location":{"end":{"column":105,"line":59},"start":{"column":68,"line":59}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"207","location":{"end":{"column":82,"line":64},"start":{"column":58,"line":64}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"212","location":{"end":{"column":82,"line":84},"start":{"column":52,"line":84}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"211","location":{"end":{"column":90,"line":79},"start":{"column":56,"line":79}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"210","location":{"end":{"column":82,"line":74},"start":{"column":52,"line":74}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"209","location":{"end":{"column":98,"line":69},"start":{"column":60,"line":69}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"213","location":{"end":{"column":84,"line":89},"start":{"column":53,"line":89}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState } from 'react';\n\nconst AddCollection = ({ loggedInUser }) => {\n  const [author, setAuthor] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [hidden, setHidden] = useState(false);\n  const [contributors, setContributors] = useState('');\n  const [text, setText] = useState('');\n  const [category, setCategory] = useState('');\n  const [tags, setTags] = useState('');\n  const [links, setLinks] = useState('');\n\n  const addCollection = (e) => {\n    e.preventDefault();\n\n    fetch('/api/collections', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        author,\n        title,\n        description,\n        hidden,\n        contributors,\n        text,\n        category,\n        tags,\n        links,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Response: ', data);\n      })\n      .catch((err) => {\n        console.log('Error on add collection', err);\n      });\n  };\n\n  return (\n    <div className=\"addCollection\">\n      <h1>Add New Collection</h1>\n      <form>\n        <label>\n          Author:\n          <input type=\"text\" name=\"author\" required onChange={(e) => setAuthor(e.target.value)} value={author} />\n        </label>\n        <br />\n        <label>\n          Title:\n          <input type=\"text\" name=\"title\" required onChange={(e) => setTitle(e.target.value)} value={title} />\n        </label>\n        <br />\n        <label>\n          Description:\n          <input type=\"text\" name=\"description\" required onChange={(e) => setDescription(e.target.value)} value={description} />\n        </label>\n        <br />\n        <label>\n          Hidden:\n          <input type=\"checkbox\" name=\"hidden\" onChange={() => setHidden(!hidden)} value={hidden} />\n        </label>\n        <br />\n        <label>\n          Contributors:\n          <input type=\"text\" name=\"contributors\" onChange={(e) => setContributors(e.target.value)} value={contributors} />\n        </label>\n        <br />\n        <label>\n          Text:\n          <input type=\"text\" name=\"text\" onChange={(e) => setText(e.target.value)} value={text} />\n        </label>\n        <br />\n        <label>\n          Category:\n          <input type=\"text\" name=\"category\" onChange={(e) => setCategory(e.target.value)} value={category} />\n        </label>\n        <br />\n        <label>\n          Tags:\n          <input type=\"text\" name=\"tags\" onChange={(e) => setTags(e.target.value)} value={tags} />\n        </label>\n        <br />\n        <label>\n          Links:\n          <input type=\"text\" name=\"links\" onChange={(e) => setLinks(e.target.value)} value={links} />\n        </label>\n        <br />\n        <input type=\"submit\" value=\"Submit\" onClick={addCollection} />\n      </form>\n    </div>\n  );\n};\n\nexport default AddCollection;\n"},"/Users/steve/learnvault/client/src/components/collections/AllCollections.jsx":{"language":"javascript","mutants":[{"id":"214","location":{"end":{"column":2,"line":60},"start":{"column":63,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"216","location":{"end":{"column":4,"line":38},"start":{"column":19,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"215","location":{"end":{"column":52,"line":8},"start":{"column":50,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"217","location":{"end":{"column":24,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"218","location":{"end":{"column":24,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"219","location":{"end":{"column":6,"line":28},"start":{"column":26,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":46,"line":20},"start":{"column":13,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"222","location":{"end":{"column":10,"line":25},"start":{"column":27,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"223","location":{"end":{"column":29,"line":32},"start":{"column":11,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"224","location":{"end":{"column":32,"line":33},"start":{"column":13,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"221","location":{"end":{"column":34,"line":21},"start":{"column":15,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"225","location":{"end":{"column":8,"line":37},"start":{"column":25,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"226","location":{"end":{"column":14,"line":38},"start":{"column":6,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"228","location":{"end":{"column":75,"line":42},"start":{"column":58,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"227","location":{"end":{"column":55,"line":42},"start":{"column":30,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"229","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"230","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"231","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"EqualityOperator","replacement":"collections[0] === undefined","status":"Survived"},{"id":"232","location":{"end":{"column":10,"line":54},"start":{"column":25,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Collection from './Collection';\n\nconst AllCollections = ({ loggedInUser, userCollections }) => {\n  // console.log('Invoked AllCollections', loggedInUser, userCollections);\n  const [collections, setCollections] = useState([]);\n  const { userId } = useParams();\n\n  // console.log('useState collections', collections);\n  // console.log('useParams userId', userId);\n\n  useEffect(() => {\n    // console.log('Invoked useEffect userCollections', userCollections);\n\n    // Check if we are trying to get all collections for a specific user\n    if (userCollections) {\n      // console.log('fetching only collections for user', userId);\n      fetch(`/api/collections/user/${userId}`)\n        .then((res) => res.json())\n        .then((result) => {\n          // console.log(`AllCollections fetch /api/collections/${userId}`, result);\n          setCollections(result);\n        });\n\n      return;\n    }\n\n    // Otherwise just get all collections\n    // console.log('fetching all collections');\n    fetch('/api/collections')\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log('AllCollections fetch /api/collections', result);\n        setCollections(result);\n      });\n  }, [userId]);\n\n  return (\n    <div>\n      <h1>{userCollections ? `${userId}'s Collections` : 'All Collections'}</h1>\n      {collections[0] !== undefined ? (\n        collections.map((collection) => (\n          <Collection\n            key={collection._id}\n            id={collection._id}\n            title={collection.title}\n            description={collection.description}\n            author={collection.author}\n            loggedInUser={loggedInUser}\n            likes={collection.likes}\n          />\n        ))\n      ) : (\n        <li> Loading...</li>\n      )}\n    </div>\n  );\n};\n\nexport default AllCollections;\n"},"/Users/steve/learnvault/client/src/components/collections/ExpandedCollection.jsx":{"language":"javascript","mutants":[{"id":"235","location":{"end":{"column":2,"line":66},"start":{"column":50,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"237","location":{"end":{"column":59,"line":11},"start":{"column":57,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"236","location":{"end":{"column":61,"line":11},"start":{"column":48,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"238","location":{"end":{"column":4,"line":25},"start":{"column":19,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"239","location":{"end":{"column":35,"line":19},"start":{"column":11,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"240","location":{"end":{"column":32,"line":20},"start":{"column":13,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"241","location":{"end":{"column":8,"line":24},"start":{"column":25,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"242","location":{"end":{"column":8,"line":25},"start":{"column":6,"line":25}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"243","location":{"end":{"column":8,"line":48},"start":{"column":8,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"244","location":{"end":{"column":8,"line":48},"start":{"column":8,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"246","location":{"end":{"column":12,"line":46},"start":{"column":33,"line":40}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"245","location":{"end":{"column":8,"line":48},"start":{"column":8,"line":38}},"mutatorName":"LogicalOperator","replacement":"collection.links || <div className=\"links\">\n          {collection.links.map(link => <div className=\"links__item\" key={link}>\n              <a href={link} target=\"_blank\" rel=\"noreferrer\">\n                {link}\n              </a>\n            </div>)}\n        </div>","status":"Killed"}],"source":"import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport './ExpandedCollection.css';\n\nimport LikeButton from './LikeButton';\nimport SaveButton from './SaveButton';\n\nconst ExpandedCollection = ({ loggedInUser }) => {\n  // console.log('Invoked ExpandedCollection', loggedInUser);\n  const [collection, setCollection] = useState({ likes: [] });\n  const { id } = useParams();\n\n  // console.log('useState collection', collection);\n  // console.log('useParams id', id);\n\n  useEffect(() => {\n    // console.log('Fetching /api/collections for', id);\n    fetch(`/api/collections/${id}`)\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        setCollection(result);\n      });\n  }, []);\n\n  // console.log('useEffect collection', collection);\n  return (\n    <div className=\"collection-div\">\n      <h1>{collection.title}</h1>\n      <h3>{collection.description}</h3>\n\n      <div className=\"creator\">\n        <div className=\"creator__label\">Creator:</div>\n        <div className=\"creator__author\">{collection.author}</div>\n      </div>\n\n      {collection.links && (\n        <div className=\"links\">\n          {collection.links.map((link) => (\n            <div className=\"links__item\" key={link}>\n              <a href={link} target=\"_blank\" rel=\"noreferrer\">\n                {link}\n              </a>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {loggedInUser ? (\n        <div>\n          <br />\n          <LikeButton loggedInUser={loggedInUser} likes={collection.likes} id={id} />\n          <SaveButton loggedInUser={loggedInUser} id={id} />\n        </div>\n      ) : (\n        <div>\n          <Link to=\"/register\">Register</Link>\n          &nbsp;or&nbsp;\n          <Link to=\"/login\">Login</Link>\n          &nbsp;to save this collection\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExpandedCollection;\n"},"/Users/steve/learnvault/client/src/components/collections/Collection.jsx":{"language":"javascript","mutants":[{"id":"234","location":{"end":{"column":37,"line":21},"start":{"column":17,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"233","location":{"end":{"column":2,"line":41},"start":{"column":20,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport LikeButton from './LikeButton';\nimport SaveButton from './SaveButton';\n\nimport './Collection.css';\n\nconst Collection = ({\n  id, title, description, author, loggedInUser, likes,\n}) => (\n  <div key={id} className=\"collection\">\n    <h1 className=\"collection__title\">{title}</h1>\n    <h3>{description}</h3>\n\n    <div className=\"creator\">\n      <div className=\"creator__label\">Creator:</div>\n      <div className=\"creator__author\">{author}</div>\n    </div>\n    <div>\n      <Link to={`/collections/${id}`} className=\"collection__button\">\n        View Collection\n      </Link>\n    </div>\n    {loggedInUser ? (\n      <div>\n        <br />\n        <LikeButton loggedInUser={loggedInUser} likes={likes} id={id} />\n        <SaveButton loggedInUser={loggedInUser} id={id} />\n      </div>\n    ) : (\n      <div>\n        <br />\n        <Link to=\"/register\">Register</Link>\n        &nbsp;or&nbsp;\n        <Link to=\"/login\">Login</Link>\n        &nbsp;to save this collection\n      </div>\n    )}\n  </div>\n);\n\nexport default Collection;\n"},"/Users/steve/learnvault/client/src/components/collections/LikeButton.jsx":{"language":"javascript","mutants":[{"id":"248","location":{"end":{"column":4,"line":23},"start":{"column":45,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"249","location":{"end":{"column":53,"line":7},"start":{"column":21,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"247","location":{"end":{"column":2,"line":40},"start":{"column":53,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"251","location":{"end":{"column":6,"line":15},"start":{"column":42,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"250","location":{"end":{"column":40,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"252","location":{"end":{"column":20,"line":10},"start":{"column":15,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"253","location":{"end":{"column":8,"line":13},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"254","location":{"end":{"column":23,"line":12},"start":{"column":9,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"255","location":{"end":{"column":43,"line":12},"start":{"column":25,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"256","location":{"end":{"column":42,"line":16},"start":{"column":13,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"258","location":{"end":{"column":31,"line":18},"start":{"column":21,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"257","location":{"end":{"column":8,"line":19},"start":{"column":23,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"259","location":{"end":{"column":8,"line":22},"start":{"column":25,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"260","location":{"end":{"column":31,"line":21},"start":{"column":23,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"261","location":{"end":{"column":64,"line":28},"start":{"column":18,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"262","location":{"end":{"column":67,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { useState } from 'react';\n\nimport './LikeButton.css';\n\nconst LikeButton = ({ id, loggedInUser, likes }) => {\n  function likeButtonClick(eventId, userId) {\n    const payload = { id: userId, collectionId: id };\n\n    fetch(`/api/collections/like/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  return (\n    <>\n      <span\n        onClick={() => likeButtonClick(id, loggedInUser, likes)}\n        onKeyPress={() => likeButtonClick(id, loggedInUser, likes)}\n        type=\"button\"\n        className=\"button-like\"\n        role=\"button\"\n        tabIndex={0}\n      >\n        <i className=\"far fa-thumbs-up\" />\n        <small>{likes.length}</small>\n      </span>\n    </>\n  );\n};\n\nexport default LikeButton;\n"},"/Users/steve/learnvault/client/src/components/collections/SaveButton.jsx":{"language":"javascript","mutants":[{"id":"264","location":{"end":{"column":4,"line":21},"start":{"column":45,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"265","location":{"end":{"column":53,"line":5},"start":{"column":21,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"266","location":{"end":{"column":40,"line":7},"start":{"column":11,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"267","location":{"end":{"column":6,"line":13},"start":{"column":42,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"268","location":{"end":{"column":20,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"263","location":{"end":{"column":2,"line":36},"start":{"column":46,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"269","location":{"end":{"column":8,"line":11},"start":{"column":16,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"270","location":{"end":{"column":23,"line":10},"start":{"column":9,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"271","location":{"end":{"column":43,"line":10},"start":{"column":25,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"272","location":{"end":{"column":42,"line":14},"start":{"column":13,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"273","location":{"end":{"column":8,"line":17},"start":{"column":23,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"274","location":{"end":{"column":31,"line":16},"start":{"column":21,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"275","location":{"end":{"column":8,"line":20},"start":{"column":25,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"276","location":{"end":{"column":31,"line":19},"start":{"column":23,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"277","location":{"end":{"column":55,"line":25},"start":{"column":16,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"278","location":{"end":{"column":58,"line":26},"start":{"column":19,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\n\nconst SaveButton = ({ id, loggedInUser }) => {\n  function likeButtonClick(eventId, userId) {\n    const payload = { id: userId, collectionId: id };\n\n    fetch(`/api/collections/save/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  return (\n    <span\n      onClick={() => likeButtonClick(id, loggedInUser)}\n      onKeyPress={() => likeButtonClick(id, loggedInUser)}\n      role=\"button\"\n      tabIndex={0}\n      type=\"button\"\n      className=\"button-like\"\n    >\n      <i className=\"far fa-star\" />\n    &nbsp; Save Collection\n    </span>\n  );\n};\n\nexport default SaveButton;\n"},"/Users/steve/learnvault/client/src/components/collections/SavedCollections.jsx":{"language":"javascript","mutants":[{"id":"279","location":{"end":{"column":2,"line":61},"start":{"column":48,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"280","location":{"end":{"column":52,"line":7},"start":{"column":50,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"281","location":{"end":{"column":32,"line":8},"start":{"column":30,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"282","location":{"end":{"column":4,"line":38},"start":{"column":19,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"283","location":{"end":{"column":62,"line":15},"start":{"column":11,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"284","location":{"end":{"column":6,"line":20},"start":{"column":64,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"285","location":{"end":{"column":20,"line":16},"start":{"column":15,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"286","location":{"end":{"column":8,"line":19},"start":{"column":16,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"287","location":{"end":{"column":23,"line":18},"start":{"column":9,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"288","location":{"end":{"column":43,"line":18},"start":{"column":25,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"290","location":{"end":{"column":8,"line":34},"start":{"column":23,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"289","location":{"end":{"column":42,"line":21},"start":{"column":13,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"291","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"292","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"293","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"EqualityOperator","replacement":"data.length >= 0","status":"Survived"},{"id":"294","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"EqualityOperator","replacement":"data.length <= 0","status":"Killed"},{"id":"295","location":{"end":{"column":10,"line":33},"start":{"column":30,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"296","location":{"end":{"column":15,"line":32},"start":{"column":20,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"298","location":{"end":{"column":38,"line":26},"start":{"column":19,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"297","location":{"end":{"column":58,"line":25},"start":{"column":34,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"299","location":{"end":{"column":14,"line":30},"start":{"column":31,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"302","location":{"end":{"column":8,"line":37},"start":{"column":25,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"304","location":{"end":{"column":8,"line":38},"start":{"column":6,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"300","location":{"end":{"column":14,"line":32},"start":{"column":27,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"308","location":{"end":{"column":12,"line":58},"start":{"column":27,"line":48}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"301","location":{"end":{"column":53,"line":31},"start":{"column":30,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"305","location":{"end":{"column":36,"line":46},"start":{"column":8,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"306","location":{"end":{"column":36,"line":46},"start":{"column":8,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"303","location":{"end":{"column":31,"line":36},"start":{"column":23,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"307","location":{"end":{"column":36,"line":46},"start":{"column":8,"line":46}},"mutatorName":"EqualityOperator","replacement":"collections[0] === undefined","status":"Killed"}],"source":"import React, { useState, useEffect } from 'react';\n\nimport Collection from './Collection';\n\nconst SavedCollections = ({ loggedInUser }) => {\n  // console.log('Invoked SavedCollections', loggedInUser);\n  const [collections, setCollections] = useState([]);\n  const currentCollections = [];\n\n  // console.log('useState collections', collections);\n\n  useEffect(() => {\n    // Get all collections for user\n    // console.log('fetching savedcollections', loggedInUser);\n    fetch(`/api/collections/savedcollections/${loggedInUser}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log('fetch savedcollectiond data', data);\n        if (data.length > 0) {\n          data.map((id) => fetch(`/api/collections/${id}`)\n            .then((res) => res.json())\n            .then((result) => {\n              // console.log('pushing currentCollection', result);\n              currentCollections.push(result);\n            }).then(() => {\n              setCollections([...currentCollections]);\n            }));\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  // console.log('currentCollections', currentCollections);\n  // console.log('useEffect collections', collections);\n\n  return (\n    <div>\n      <h1>Saved Collections</h1>\n      {collections[0] !== undefined\n        ? (\n          collections.map((collection) => (\n            <Collection\n              key={collection._id}\n              id={collection._id}\n              title={collection.title}\n              description={collection.description}\n              author={collection.author}\n              loggedInUser={loggedInUser}\n              likes={collection.likes}\n            />\n          ))) : <li> Loading...</li>}\n    </div>\n  );\n};\n\nexport default SavedCollections;\n"},"/Users/steve/learnvault/client/src/index.jsx":{"language":"javascript","mutants":[{"id":"309","location":{"end":{"column":46,"line":5},"start":{"column":40,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.querySelector('#app'));\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};